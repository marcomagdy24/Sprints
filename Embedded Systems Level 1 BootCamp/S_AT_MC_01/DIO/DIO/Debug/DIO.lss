
DIO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000320  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000394  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  00800060  00800060  00000394  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000394  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000003c4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  00000400  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000099c  00000000  00000000  00000460  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000680  00000000  00000000  00000dfc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003c2  00000000  00000000  0000147c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000098  00000000  00000000  00001840  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003ed  00000000  00000000  000018d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000299  00000000  00000000  00001cc5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00001f5e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a3 36       	cpi	r26, 0x63	; 99
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 61 01 	call	0x2c2	; 0x2c2 <main>
  74:	0c 94 8e 01 	jmp	0x31c	; 0x31c <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <DIO_Init>:
			}

		}
	}
	return au8_error;
}
  7c:	fc 01       	movw	r30, r24
  7e:	90 81       	ld	r25, Z
  80:	91 30       	cpi	r25, 0x01	; 1
  82:	19 f1       	breq	.+70     	; 0xca <DIO_Init+0x4e>
  84:	30 f0       	brcs	.+12     	; 0x92 <DIO_Init+0x16>
  86:	92 30       	cpi	r25, 0x02	; 2
  88:	e1 f1       	breq	.+120    	; 0x102 <DIO_Init+0x86>
  8a:	93 30       	cpi	r25, 0x03	; 3
  8c:	09 f4       	brne	.+2      	; 0x90 <DIO_Init+0x14>
  8e:	55 c0       	rjmp	.+170    	; 0x13a <DIO_Init+0xbe>
  90:	6f c0       	rjmp	.+222    	; 0x170 <DIO_Init+0xf4>
  92:	82 81       	ldd	r24, Z+2	; 0x02
  94:	81 30       	cpi	r24, 0x01	; 1
  96:	61 f4       	brne	.+24     	; 0xb0 <DIO_Init+0x34>
  98:	2a b3       	in	r18, 0x1a	; 26
  9a:	81 e0       	ldi	r24, 0x01	; 1
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	01 80       	ldd	r0, Z+1	; 0x01
  a0:	02 c0       	rjmp	.+4      	; 0xa6 <DIO_Init+0x2a>
  a2:	88 0f       	add	r24, r24
  a4:	99 1f       	adc	r25, r25
  a6:	0a 94       	dec	r0
  a8:	e2 f7       	brpl	.-8      	; 0xa2 <DIO_Init+0x26>
  aa:	82 2b       	or	r24, r18
  ac:	8a bb       	out	0x1a, r24	; 26
  ae:	60 c0       	rjmp	.+192    	; 0x170 <DIO_Init+0xf4>
  b0:	2a b3       	in	r18, 0x1a	; 26
  b2:	81 e0       	ldi	r24, 0x01	; 1
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	01 80       	ldd	r0, Z+1	; 0x01
  b8:	02 c0       	rjmp	.+4      	; 0xbe <DIO_Init+0x42>
  ba:	88 0f       	add	r24, r24
  bc:	99 1f       	adc	r25, r25
  be:	0a 94       	dec	r0
  c0:	e2 f7       	brpl	.-8      	; 0xba <DIO_Init+0x3e>
  c2:	80 95       	com	r24
  c4:	82 23       	and	r24, r18
  c6:	8a bb       	out	0x1a, r24	; 26
  c8:	53 c0       	rjmp	.+166    	; 0x170 <DIO_Init+0xf4>
  ca:	82 81       	ldd	r24, Z+2	; 0x02
  cc:	81 30       	cpi	r24, 0x01	; 1
  ce:	61 f4       	brne	.+24     	; 0xe8 <DIO_Init+0x6c>
  d0:	27 b3       	in	r18, 0x17	; 23
  d2:	81 e0       	ldi	r24, 0x01	; 1
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	01 80       	ldd	r0, Z+1	; 0x01
  d8:	02 c0       	rjmp	.+4      	; 0xde <DIO_Init+0x62>
  da:	88 0f       	add	r24, r24
  dc:	99 1f       	adc	r25, r25
  de:	0a 94       	dec	r0
  e0:	e2 f7       	brpl	.-8      	; 0xda <DIO_Init+0x5e>
  e2:	82 2b       	or	r24, r18
  e4:	87 bb       	out	0x17, r24	; 23
  e6:	44 c0       	rjmp	.+136    	; 0x170 <DIO_Init+0xf4>
  e8:	27 b3       	in	r18, 0x17	; 23
  ea:	81 e0       	ldi	r24, 0x01	; 1
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	01 80       	ldd	r0, Z+1	; 0x01
  f0:	02 c0       	rjmp	.+4      	; 0xf6 <DIO_Init+0x7a>
  f2:	88 0f       	add	r24, r24
  f4:	99 1f       	adc	r25, r25
  f6:	0a 94       	dec	r0
  f8:	e2 f7       	brpl	.-8      	; 0xf2 <DIO_Init+0x76>
  fa:	80 95       	com	r24
  fc:	82 23       	and	r24, r18
  fe:	87 bb       	out	0x17, r24	; 23
 100:	37 c0       	rjmp	.+110    	; 0x170 <DIO_Init+0xf4>
 102:	82 81       	ldd	r24, Z+2	; 0x02
 104:	81 30       	cpi	r24, 0x01	; 1
 106:	61 f4       	brne	.+24     	; 0x120 <DIO_Init+0xa4>
 108:	24 b3       	in	r18, 0x14	; 20
 10a:	81 e0       	ldi	r24, 0x01	; 1
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	01 80       	ldd	r0, Z+1	; 0x01
 110:	02 c0       	rjmp	.+4      	; 0x116 <DIO_Init+0x9a>
 112:	88 0f       	add	r24, r24
 114:	99 1f       	adc	r25, r25
 116:	0a 94       	dec	r0
 118:	e2 f7       	brpl	.-8      	; 0x112 <DIO_Init+0x96>
 11a:	82 2b       	or	r24, r18
 11c:	84 bb       	out	0x14, r24	; 20
 11e:	28 c0       	rjmp	.+80     	; 0x170 <DIO_Init+0xf4>
 120:	24 b3       	in	r18, 0x14	; 20
 122:	81 e0       	ldi	r24, 0x01	; 1
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	01 80       	ldd	r0, Z+1	; 0x01
 128:	02 c0       	rjmp	.+4      	; 0x12e <DIO_Init+0xb2>
 12a:	88 0f       	add	r24, r24
 12c:	99 1f       	adc	r25, r25
 12e:	0a 94       	dec	r0
 130:	e2 f7       	brpl	.-8      	; 0x12a <DIO_Init+0xae>
 132:	80 95       	com	r24
 134:	82 23       	and	r24, r18
 136:	84 bb       	out	0x14, r24	; 20
 138:	1b c0       	rjmp	.+54     	; 0x170 <DIO_Init+0xf4>
 13a:	82 81       	ldd	r24, Z+2	; 0x02
 13c:	81 30       	cpi	r24, 0x01	; 1
 13e:	61 f4       	brne	.+24     	; 0x158 <DIO_Init+0xdc>
 140:	21 b3       	in	r18, 0x11	; 17
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	01 80       	ldd	r0, Z+1	; 0x01
 148:	02 c0       	rjmp	.+4      	; 0x14e <DIO_Init+0xd2>
 14a:	88 0f       	add	r24, r24
 14c:	99 1f       	adc	r25, r25
 14e:	0a 94       	dec	r0
 150:	e2 f7       	brpl	.-8      	; 0x14a <DIO_Init+0xce>
 152:	82 2b       	or	r24, r18
 154:	81 bb       	out	0x11, r24	; 17
 156:	0c c0       	rjmp	.+24     	; 0x170 <DIO_Init+0xf4>
 158:	21 b3       	in	r18, 0x11	; 17
 15a:	81 e0       	ldi	r24, 0x01	; 1
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	01 80       	ldd	r0, Z+1	; 0x01
 160:	02 c0       	rjmp	.+4      	; 0x166 <DIO_Init+0xea>
 162:	88 0f       	add	r24, r24
 164:	99 1f       	adc	r25, r25
 166:	0a 94       	dec	r0
 168:	e2 f7       	brpl	.-8      	; 0x162 <DIO_Init+0xe6>
 16a:	80 95       	com	r24
 16c:	82 23       	and	r24, r18
 16e:	81 bb       	out	0x11, r24	; 17
 170:	80 e0       	ldi	r24, 0x00	; 0
 172:	08 95       	ret

00000174 <DIO_Write_PIN>:
 174:	81 30       	cpi	r24, 0x01	; 1
 176:	01 f1       	breq	.+64     	; 0x1b8 <DIO_Write_PIN+0x44>
 178:	30 f0       	brcs	.+12     	; 0x186 <DIO_Write_PIN+0x12>
 17a:	82 30       	cpi	r24, 0x02	; 2
 17c:	b1 f1       	breq	.+108    	; 0x1ea <DIO_Write_PIN+0x76>
 17e:	83 30       	cpi	r24, 0x03	; 3
 180:	09 f4       	brne	.+2      	; 0x184 <DIO_Write_PIN+0x10>
 182:	4c c0       	rjmp	.+152    	; 0x21c <DIO_Write_PIN+0xa8>
 184:	63 c0       	rjmp	.+198    	; 0x24c <DIO_Write_PIN+0xd8>
 186:	41 30       	cpi	r20, 0x01	; 1
 188:	59 f4       	brne	.+22     	; 0x1a0 <DIO_Write_PIN+0x2c>
 18a:	2b b3       	in	r18, 0x1b	; 27
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	02 c0       	rjmp	.+4      	; 0x196 <DIO_Write_PIN+0x22>
 192:	88 0f       	add	r24, r24
 194:	99 1f       	adc	r25, r25
 196:	6a 95       	dec	r22
 198:	e2 f7       	brpl	.-8      	; 0x192 <DIO_Write_PIN+0x1e>
 19a:	82 2b       	or	r24, r18
 19c:	8b bb       	out	0x1b, r24	; 27
 19e:	56 c0       	rjmp	.+172    	; 0x24c <DIO_Write_PIN+0xd8>
 1a0:	2b b3       	in	r18, 0x1b	; 27
 1a2:	81 e0       	ldi	r24, 0x01	; 1
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	02 c0       	rjmp	.+4      	; 0x1ac <DIO_Write_PIN+0x38>
 1a8:	88 0f       	add	r24, r24
 1aa:	99 1f       	adc	r25, r25
 1ac:	6a 95       	dec	r22
 1ae:	e2 f7       	brpl	.-8      	; 0x1a8 <DIO_Write_PIN+0x34>
 1b0:	80 95       	com	r24
 1b2:	82 23       	and	r24, r18
 1b4:	8b bb       	out	0x1b, r24	; 27
 1b6:	4a c0       	rjmp	.+148    	; 0x24c <DIO_Write_PIN+0xd8>
 1b8:	41 30       	cpi	r20, 0x01	; 1
 1ba:	59 f4       	brne	.+22     	; 0x1d2 <DIO_Write_PIN+0x5e>
 1bc:	28 b3       	in	r18, 0x18	; 24
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	02 c0       	rjmp	.+4      	; 0x1c8 <DIO_Write_PIN+0x54>
 1c4:	88 0f       	add	r24, r24
 1c6:	99 1f       	adc	r25, r25
 1c8:	6a 95       	dec	r22
 1ca:	e2 f7       	brpl	.-8      	; 0x1c4 <DIO_Write_PIN+0x50>
 1cc:	82 2b       	or	r24, r18
 1ce:	88 bb       	out	0x18, r24	; 24
 1d0:	3d c0       	rjmp	.+122    	; 0x24c <DIO_Write_PIN+0xd8>
 1d2:	28 b3       	in	r18, 0x18	; 24
 1d4:	81 e0       	ldi	r24, 0x01	; 1
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	02 c0       	rjmp	.+4      	; 0x1de <DIO_Write_PIN+0x6a>
 1da:	88 0f       	add	r24, r24
 1dc:	99 1f       	adc	r25, r25
 1de:	6a 95       	dec	r22
 1e0:	e2 f7       	brpl	.-8      	; 0x1da <DIO_Write_PIN+0x66>
 1e2:	80 95       	com	r24
 1e4:	82 23       	and	r24, r18
 1e6:	88 bb       	out	0x18, r24	; 24
 1e8:	31 c0       	rjmp	.+98     	; 0x24c <DIO_Write_PIN+0xd8>
 1ea:	41 30       	cpi	r20, 0x01	; 1
 1ec:	59 f4       	brne	.+22     	; 0x204 <DIO_Write_PIN+0x90>
 1ee:	25 b3       	in	r18, 0x15	; 21
 1f0:	81 e0       	ldi	r24, 0x01	; 1
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	02 c0       	rjmp	.+4      	; 0x1fa <DIO_Write_PIN+0x86>
 1f6:	88 0f       	add	r24, r24
 1f8:	99 1f       	adc	r25, r25
 1fa:	6a 95       	dec	r22
 1fc:	e2 f7       	brpl	.-8      	; 0x1f6 <DIO_Write_PIN+0x82>
 1fe:	82 2b       	or	r24, r18
 200:	85 bb       	out	0x15, r24	; 21
 202:	24 c0       	rjmp	.+72     	; 0x24c <DIO_Write_PIN+0xd8>
 204:	25 b3       	in	r18, 0x15	; 21
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	02 c0       	rjmp	.+4      	; 0x210 <DIO_Write_PIN+0x9c>
 20c:	88 0f       	add	r24, r24
 20e:	99 1f       	adc	r25, r25
 210:	6a 95       	dec	r22
 212:	e2 f7       	brpl	.-8      	; 0x20c <DIO_Write_PIN+0x98>
 214:	80 95       	com	r24
 216:	82 23       	and	r24, r18
 218:	85 bb       	out	0x15, r24	; 21
 21a:	18 c0       	rjmp	.+48     	; 0x24c <DIO_Write_PIN+0xd8>
 21c:	41 30       	cpi	r20, 0x01	; 1
 21e:	59 f4       	brne	.+22     	; 0x236 <DIO_Write_PIN+0xc2>
 220:	22 b3       	in	r18, 0x12	; 18
 222:	81 e0       	ldi	r24, 0x01	; 1
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	02 c0       	rjmp	.+4      	; 0x22c <DIO_Write_PIN+0xb8>
 228:	88 0f       	add	r24, r24
 22a:	99 1f       	adc	r25, r25
 22c:	6a 95       	dec	r22
 22e:	e2 f7       	brpl	.-8      	; 0x228 <DIO_Write_PIN+0xb4>
 230:	82 2b       	or	r24, r18
 232:	82 bb       	out	0x12, r24	; 18
 234:	0b c0       	rjmp	.+22     	; 0x24c <DIO_Write_PIN+0xd8>
 236:	22 b3       	in	r18, 0x12	; 18
 238:	81 e0       	ldi	r24, 0x01	; 1
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	02 c0       	rjmp	.+4      	; 0x242 <DIO_Write_PIN+0xce>
 23e:	88 0f       	add	r24, r24
 240:	99 1f       	adc	r25, r25
 242:	6a 95       	dec	r22
 244:	e2 f7       	brpl	.-8      	; 0x23e <DIO_Write_PIN+0xca>
 246:	80 95       	com	r24
 248:	82 23       	and	r24, r18
 24a:	82 bb       	out	0x12, r24	; 18
 24c:	81 e0       	ldi	r24, 0x01	; 1
 24e:	08 95       	ret

00000250 <DIO_Read_PIN>:
	E_STATUS au8_error=E_INVALID;
	if(((port <= DIO_PORTD)||(port >= DIO_PORTA))&&
	((pin <= PIN_7)||(pin >= PIN_0)))
	{
		au8_error = E_OK;
		switch(port)
 250:	81 30       	cpi	r24, 0x01	; 1
 252:	91 f0       	breq	.+36     	; 0x278 <DIO_Read_PIN+0x28>
 254:	28 f0       	brcs	.+10     	; 0x260 <DIO_Read_PIN+0x10>
 256:	82 30       	cpi	r24, 0x02	; 2
 258:	d9 f0       	breq	.+54     	; 0x290 <DIO_Read_PIN+0x40>
 25a:	83 30       	cpi	r24, 0x03	; 3
 25c:	29 f1       	breq	.+74     	; 0x2a8 <DIO_Read_PIN+0x58>
 25e:	2f c0       	rjmp	.+94     	; 0x2be <DIO_Read_PIN+0x6e>
		{
			case DIO_PORTA:
			{
				*data_ptr=READ_BIT(PORTA_INPUT,pin);
 260:	29 b3       	in	r18, 0x19	; 25
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	02 c0       	rjmp	.+4      	; 0x26c <DIO_Read_PIN+0x1c>
 268:	88 0f       	add	r24, r24
 26a:	99 1f       	adc	r25, r25
 26c:	6a 95       	dec	r22
 26e:	e2 f7       	brpl	.-8      	; 0x268 <DIO_Read_PIN+0x18>
 270:	82 23       	and	r24, r18
 272:	fa 01       	movw	r30, r20
 274:	80 83       	st	Z, r24
				break;
 276:	23 c0       	rjmp	.+70     	; 0x2be <DIO_Read_PIN+0x6e>
			}
			case DIO_PORTB:
			{
				*data_ptr=READ_BIT(PORTB_INPUT,pin);
 278:	26 b3       	in	r18, 0x16	; 22
 27a:	81 e0       	ldi	r24, 0x01	; 1
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	02 c0       	rjmp	.+4      	; 0x284 <DIO_Read_PIN+0x34>
 280:	88 0f       	add	r24, r24
 282:	99 1f       	adc	r25, r25
 284:	6a 95       	dec	r22
 286:	e2 f7       	brpl	.-8      	; 0x280 <DIO_Read_PIN+0x30>
 288:	82 23       	and	r24, r18
 28a:	fa 01       	movw	r30, r20
 28c:	80 83       	st	Z, r24
				break;
 28e:	17 c0       	rjmp	.+46     	; 0x2be <DIO_Read_PIN+0x6e>
			}
			case DIO_PORTC:
			{
				*data_ptr=READ_BIT(PORTC_INPUT,pin);
 290:	23 b3       	in	r18, 0x13	; 19
 292:	81 e0       	ldi	r24, 0x01	; 1
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	02 c0       	rjmp	.+4      	; 0x29c <DIO_Read_PIN+0x4c>
 298:	88 0f       	add	r24, r24
 29a:	99 1f       	adc	r25, r25
 29c:	6a 95       	dec	r22
 29e:	e2 f7       	brpl	.-8      	; 0x298 <DIO_Read_PIN+0x48>
 2a0:	82 23       	and	r24, r18
 2a2:	fa 01       	movw	r30, r20
 2a4:	80 83       	st	Z, r24
				break;
 2a6:	0b c0       	rjmp	.+22     	; 0x2be <DIO_Read_PIN+0x6e>
			}
			case DIO_PORTD:
			{
				*data_ptr=READ_BIT(PORTD_INPUT,pin);
 2a8:	20 b3       	in	r18, 0x10	; 16
 2aa:	81 e0       	ldi	r24, 0x01	; 1
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	02 c0       	rjmp	.+4      	; 0x2b4 <DIO_Read_PIN+0x64>
 2b0:	88 0f       	add	r24, r24
 2b2:	99 1f       	adc	r25, r25
 2b4:	6a 95       	dec	r22
 2b6:	e2 f7       	brpl	.-8      	; 0x2b0 <DIO_Read_PIN+0x60>
 2b8:	82 23       	and	r24, r18
 2ba:	fa 01       	movw	r30, r20
 2bc:	80 83       	st	Z, r24
			}

		}
	}
	return au8_error;
}
 2be:	81 e0       	ldi	r24, 0x01	; 1
 2c0:	08 95       	ret

000002c2 <main>:
#define F_CPU 10000000ul
#include "DIO Driver/dio.h"


int main(void)
{
 2c2:	cf 93       	push	r28
 2c4:	df 93       	push	r29
 2c6:	1f 92       	push	r1
 2c8:	cd b7       	in	r28, 0x3d	; 61
 2ca:	de b7       	in	r29, 0x3e	; 62
	/* Replace with your application code */
	configs.port=DIO_PORTA;
 2cc:	00 e6       	ldi	r16, 0x60	; 96
 2ce:	10 e0       	ldi	r17, 0x00	; 0
 2d0:	f8 01       	movw	r30, r16
 2d2:	10 82       	st	Z, r1
	configs.pin=PIN_0;
 2d4:	11 82       	std	Z+1, r1	; 0x01
	configs.dir=OUTPUT;
 2d6:	81 e0       	ldi	r24, 0x01	; 1
 2d8:	82 83       	std	Z+2, r24	; 0x02
	DIO_Init(&configs);
 2da:	c8 01       	movw	r24, r16
 2dc:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_Init>
	//Make the output pin initially high
	//configuring the input pin
	configs.port=DIO_PORTC;
 2e0:	82 e0       	ldi	r24, 0x02	; 2
 2e2:	f8 01       	movw	r30, r16
 2e4:	80 83       	st	Z, r24
	configs.pin=PIN_0;
 2e6:	11 82       	std	Z+1, r1	; 0x01
	configs.dir=INPUT;
 2e8:	12 82       	std	Z+2, r1	; 0x02
	DIO_Init(&configs);
 2ea:	c8 01       	movw	r24, r16
 2ec:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_Init>
	uint8_t au_read_pin;
	
	while (1)
	{
		//read the DIO
		DIO_Read_PIN(DIO_PORTC,PIN_0,&au_read_pin);
 2f0:	ae 01       	movw	r20, r28
 2f2:	4f 5f       	subi	r20, 0xFF	; 255
 2f4:	5f 4f       	sbci	r21, 0xFF	; 255
 2f6:	60 e0       	ldi	r22, 0x00	; 0
 2f8:	82 e0       	ldi	r24, 0x02	; 2
 2fa:	0e 94 28 01 	call	0x250	; 0x250 <DIO_Read_PIN>
		if(au_read_pin==HIGH)
 2fe:	89 81       	ldd	r24, Y+1	; 0x01
 300:	81 30       	cpi	r24, 0x01	; 1
 302:	31 f4       	brne	.+12     	; 0x310 <main+0x4e>
		{
			DIO_Write_PIN(DIO_PORTA,PIN_0,HIGH);
 304:	41 e0       	ldi	r20, 0x01	; 1
 306:	60 e0       	ldi	r22, 0x00	; 0
 308:	80 e0       	ldi	r24, 0x00	; 0
 30a:	0e 94 ba 00 	call	0x174	; 0x174 <DIO_Write_PIN>
 30e:	f0 cf       	rjmp	.-32     	; 0x2f0 <main+0x2e>
		}
		else{
			DIO_Write_PIN(DIO_PORTA,PIN_0,LOW);
 310:	40 e0       	ldi	r20, 0x00	; 0
 312:	60 e0       	ldi	r22, 0x00	; 0
 314:	80 e0       	ldi	r24, 0x00	; 0
 316:	0e 94 ba 00 	call	0x174	; 0x174 <DIO_Write_PIN>
 31a:	ea cf       	rjmp	.-44     	; 0x2f0 <main+0x2e>

0000031c <_exit>:
 31c:	f8 94       	cli

0000031e <__stop_program>:
 31e:	ff cf       	rjmp	.-2      	; 0x31e <__stop_program>
